name: docker

on:
  schedule:
    # 5 PM UTC every Sunday
    - cron:  '0 17 * * 6'
  workflow_dispatch:
  push:
    branches:
      - main
      - tutorial_dockerfiles ##REMOVE THIS
  pull_request:
    paths:
      - .docker/**
      - .github/workflows/docker.yaml
      - moveit2_tutorials.repos

jobs:
  base:
    strategy:
      fail-fast: false
      matrix:
        ROS_DISTRO: [humble, rolling]
    runs-on: ubuntu-latest
    permissions:
      packages: write
      contents: read
    env:
      GH_IMAGE: ghcr.io/MikeWrock/moveit2_tutorials:${{ matrix.ROS_DISTRO }}-${{ github.job }}
      DH_IMAGE: moveit/moveit2_tutorials:${{ matrix.ROS_DISTRO }}-${{ github.job }}
      PUSH: ${{ (github.event_name != 'pull_request') && (github.repository == 'MikeWrock/moveit2_tutorials') }}

    steps:
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to Github Container Registry
        if: env.PUSH == 'true'
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Login to DockerHub
        if: env.PUSH == 'true'
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build and Push
        uses: docker/build-push-action@v3
        with:
          file: .docker/${{ github.job }}/Dockerfile
          build-args: ROS_DISTRO=${{ matrix.ROS_DISTRO }}
          target: base_image
          push: ${{ env.PUSH }}
          no-cache: true
          tags: |
            ${{ env.GH_IMAGE }}
            ${{ env.DH_IMAGE }}
  hello_world:
    strategy:
      fail-fast: false
      matrix:
        ROS_DISTRO: [humble, rolling]
    runs-on: ubuntu-latest
    permissions:
      packages: write
      contents: read
    env:
      GH_IMAGE: ghcr.io/MikeWrock/moveit2_tutorials:${{ matrix.ROS_DISTRO }}-${{ github.job }}
      DH_IMAGE: moveit/moveit2_tutorials:${{ matrix.ROS_DISTRO }}-${{ github.job }}
      PUSH: ${{ (github.event_name != 'pull_request') && (github.repository == 'MikeWrock/moveit2_tutorials') }}

    steps:
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to Github Container Registry
        if: env.PUSH == 'true'
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Login to DockerHub
        if: env.PUSH == 'true'
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build and Push
        uses: docker/build-push-action@v3
        with:
          file: .docker/${{ github.job }}/Dockerfile
          build-args: ROS_DISTRO=${{ matrix.ROS_DISTRO }}
          target: hello_world_image
          push: ${{ env.PUSH }}
          no-cache: true
          tags: |
            ${{ env.GH_IMAGE }}
            ${{ env.DH_IMAGE }}
  planning_around_objects:
    strategy:
      fail-fast: false
      matrix:
        ROS_DISTRO: [humble, rolling]
    runs-on: ubuntu-latest
    permissions:
      packages: write
      contents: read
    env:
      GH_IMAGE: ghcr.io/MikeWrock/moveit2_tutorials:${{ matrix.ROS_DISTRO }}-${{ github.job }}
      DH_IMAGE: moveit/moveit2_tutorials:${{ matrix.ROS_DISTRO }}-${{ github.job }}
      PUSH: ${{ (github.event_name != 'pull_request') && (github.repository == 'MikeWrock/moveit2_tutorials') }}

    steps:
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to Github Container Registry
        if: env.PUSH == 'true'
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Login to DockerHub
        if: env.PUSH == 'true'
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build and Push
        uses: docker/build-push-action@v3
        with:
          file: .docker/${{ github.job }}/Dockerfile
          build-args: ROS_DISTRO=${{ matrix.ROS_DISTRO }}
          target: planning_around_objects_image
          push: ${{ env.PUSH }}
          no-cache: true
          tags: |
            ${{ env.GH_IMAGE }}
            ${{ env.DH_IMAGE }}
  pick_and_place_with_mtc:
    strategy:
      fail-fast: false
      matrix:
        ROS_DISTRO: [humble, rolling]
    runs-on: ubuntu-latest
    permissions:
      packages: write
      contents: read
    env:
      GH_IMAGE: ghcr.io/MikeWrock/moveit2_tutorials:${{ matrix.ROS_DISTRO }}-${{ github.job }}
      GH_IMAGE_FULL: ghcr.io/MikeWrock/moveit2_tutorials:${{ matrix.ROS_DISTRO }}-all
      DH_IMAGE: moveit/moveit2_tutorials:${{ matrix.ROS_DISTRO }}-${{ github.job }}
      PUSH: ${{ (github.event_name != 'pull_request') && (github.repository == 'MikeWrock/moveit2_tutorials') }}

    steps:
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to Github Container Registry
        if: env.PUSH == 'true'
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Login to DockerHub
        if: env.PUSH == 'true'
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build and Push
        uses: docker/build-push-action@v3
        with:
          file: .docker/${{ github.job }}/Dockerfile
          build-args: ROS_DISTRO=${{ matrix.ROS_DISTRO }}
          target: pick_and_place_image
          push: ${{ env.PUSH }}
          no-cache: true
          tags: |
            ${{ env.GH_IMAGE }}
            ${{ env.GH_IMAGE_FULL }}
            ${{ env.DH_IMAGE }}
  delete_untagged:
    runs-on: ubuntu-latest
    needs:
      - base
    steps:
      - name: Delete Untagged Images
        if: (github.event_name != 'pull_request') && (github.repository == 'MikeWrock/moveit2')
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.DELETE_PACKAGES_TOKEN }}
          script: |
            const response = await github.request("GET /orgs/${{ env.OWNER }}/packages/container/${{ env.PACKAGE_NAME }}/versions", {
                per_page: ${{ env.PER_PAGE }}
              });
            for(version of response.data) {
                if (version.metadata.container.tags.length == 0) {
                    console.log("delete " + version.id)
                    const deleteResponse = await github.request("DELETE /orgs/${{ env.OWNER }}/packages/container/${{ env.PACKAGE_NAME }}/versions/" + version.id, { });
                    console.log("status " + deleteResponse.status)
                }
            }
        env:
          OWNER: MikeWrock
          PACKAGE_NAME: moveit2
          PER_PAGE: 100